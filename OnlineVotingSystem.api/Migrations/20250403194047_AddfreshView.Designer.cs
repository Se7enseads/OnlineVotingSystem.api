// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineVotingSystem.api.Data;

#nullable disable

namespace OnlineVotingSystem.api.Migrations
{
    [DbContext(typeof(OnlineVotingSystemContext))]
    [Migration("20250403194047_AddfreshView")]
    partial class AddfreshView
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("ElectionPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ElectionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("PositionId");

                    b.ToTable("ElectionPositions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77777777-7777-7777-7777-777777777777"),
                            ElectionId = new Guid("44444444-4444-4444-4444-444444444444"),
                            PositionId = new Guid("55555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("88888888-8888-8888-8888-888888888888"),
                            ElectionId = new Guid("44444444-4444-4444-4444-444444444444"),
                            PositionId = new Guid("66666666-6666-6666-6666-666666666666")
                        },
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            ElectionId = new Guid("44444444-4444-4444-4444-444444444444"),
                            PositionId = new Guid("2b3c4d5e-6f7a-8901-2345-abcdefabcdef")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            ElectionId = new Guid("44444444-4444-4444-4444-444444444444"),
                            PositionId = new Guid("3c4d5e6f-7a8b-9012-3456-abcdefabcdef")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            ElectionId = new Guid("44444444-4444-4444-4444-444444444444"),
                            PositionId = new Guid("4d5e6f7a-8b9c-0123-4567-abcdefabcdef")
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ElectionPositionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Party")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ElectionPositionId");

                    b.HasIndex("UserId");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99999999-9999-9999-9999-999999999999"),
                            Bio = "Experienced politician aiming for change.",
                            ElectionPositionId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Party = "Democratic Party of Kenya",
                            PhotoUrl = "https://example.com/john_kamau.jpg",
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Bio = "Youth-driven leadership for a better tomorrow.",
                            ElectionPositionId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Party = "United Progressive Alliance",
                            PhotoUrl = "https://example.com/kevin_otieno.jpg",
                            UserId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-aaaa-bbbb-bbbbbbbbbbbb"),
                            Bio = "Committed to serving the people.",
                            ElectionPositionId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Party = "Kenya African National Union",
                            PhotoUrl = "https://example.com/john_kamau.jpg",
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-aaaa-cccc-cccccccccccc"),
                            Bio = "Committed to serving the people.",
                            ElectionPositionId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Party = "Kenya African National Union",
                            PhotoUrl = "https://example.com/mary_njeri.jpg",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-aaaa-dddd-dddddddddddd"),
                            Bio = "Committed to serving the people.",
                            ElectionPositionId = new Guid("99999999-9999-9999-9999-999999999999"),
                            Party = "Kenya African National Union",
                            PhotoUrl = "https://example.com/john_kamau.jpg",
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Elections");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            CreatedBy = new Guid("22222222-2222-2222-2222-222222222222"),
                            Description = "Presidential and parliamentary elections in Kenya",
                            EndTime = new DateTime(2027, 8, 9, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2027, 8, 9, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Kenya General Elections 2027"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.ElectionResult", b =>
                {
                    b.Property<Guid?>("CandidateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CandidateName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CandidateUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ElectionId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ElectionPositionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElectionTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Party")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RegisteredVoters")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalVotes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VoterNames")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("ElectionResults", (string)null);
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Name = "President"
                        },
                        new
                        {
                            Id = new Guid("66666666-6666-6666-6666-666666666666"),
                            Name = "Governor"
                        },
                        new
                        {
                            Id = new Guid("2b3c4d5e-6f7a-8901-2345-abcdefabcdef"),
                            Name = "Senator"
                        },
                        new
                        {
                            Id = new Guid("3c4d5e6f-7a8b-9012-3456-abcdefabcdef"),
                            Name = "Member of Parliament"
                        },
                        new
                        {
                            Id = new Guid("4d5e6f7a-8b9c-0123-4567-abcdefabcdef"),
                            Name = "Women Representative"
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("NationalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-0000-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2024, 3, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.kamau@example.com",
                            IsAdmin = false,
                            Name = "John Kamau",
                            NationalId = 12345678,
                            Password = "$2a$11$RPcMfy2oo3vu3jUbdoanEe/KBs9GTo6BuS09XY4Dec8/1936ZgCOi"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2024, 3, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Email = "mary.njeri@example.com",
                            IsAdmin = true,
                            Name = "Mary Njeri",
                            NationalId = 87654321,
                            Password = "$2a$11$RPcMfy2oo3vu3jUbdoanEe/KBs9GTo6BuS09XY4Dec8/1936ZgCOi"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(2024, 3, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "kevin.otieno@example.com",
                            IsAdmin = false,
                            Name = "Kevin Otieno",
                            NationalId = 13579246,
                            Password = "$2a$11$RPcMfy2oo3vu3jUbdoanEe/KBs9GTo6BuS09XY4Dec8/1936ZgCOi"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2024, 2, 11, 12, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@system.com",
                            IsAdmin = true,
                            Name = "Admin",
                            NationalId = 10000001,
                            Password = "$2a$11$McDzAqqk04VkMTWMQmZnw.DR.uCHl/wj23tAKPZBJNSygN2koP8gK"
                        },
                        new
                        {
                            Id = new Guid("11111111-2222-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2024, 2, 11, 12, 0, 0, 0, DateTimeKind.Utc),
                            Email = "jon@admin.com",
                            IsAdmin = true,
                            Name = "Admin",
                            NationalId = 11110011,
                            Password = "$2a$11$JlT0uwCu987Mw8SeJlwqnOlvkCilbvF3wNbOPR5PGqWcQkjDQRbd."
                        });
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ElectionPositionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ElectionPositionId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            CandidateId = new Guid("99999999-9999-9999-9999-999999999999"),
                            ElectionPositionId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Timestamp = new DateTime(2027, 8, 9, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            CandidateId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            ElectionPositionId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Timestamp = new DateTime(2027, 8, 9, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            CandidateId = new Guid("bbbbbbbb-bbbb-aaaa-bbbb-bbbbbbbbbbbb"),
                            ElectionPositionId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Timestamp = new DateTime(2027, 8, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee"),
                            CandidateId = new Guid("cccccccc-cccc-aaaa-cccc-cccccccccccc"),
                            ElectionPositionId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Timestamp = new DateTime(2027, 8, 9, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("ffffffff-ffff-ffff-ffff-ffffffffffff"),
                            CandidateId = new Guid("dddddddd-dddd-aaaa-dddd-dddddddddddd"),
                            ElectionPositionId = new Guid("99999999-9999-9999-9999-999999999999"),
                            Timestamp = new DateTime(2027, 8, 9, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-4789-abcd-ef0123456789"),
                            CandidateId = new Guid("99999999-9999-9999-9999-999999999999"),
                            ElectionPositionId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Timestamp = new DateTime(2027, 8, 9, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("b2c3d4e5-f6a7-4890-bcde-f01234567890"),
                            CandidateId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            ElectionPositionId = new Guid("77777777-7777-7777-7777-777777777777"),
                            Timestamp = new DateTime(2027, 8, 9, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = new Guid("c3d4e5f6-a7b8-4901-aaaa-012345678901"),
                            CandidateId = new Guid("bbbbbbbb-bbbb-aaaa-bbbb-bbbbbbbbbbbb"),
                            ElectionPositionId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Timestamp = new DateTime(2027, 8, 9, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = new Guid("d4e5f6a7-b8c9-4012-aaaa-123456789012"),
                            CandidateId = new Guid("cccccccc-cccc-aaaa-cccc-cccccccccccc"),
                            ElectionPositionId = new Guid("88888888-8888-8888-8888-888888888888"),
                            Timestamp = new DateTime(2027, 8, 9, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = new Guid("e5f6a7b8-c9d0-4123-aaaa-234567890123"),
                            CandidateId = new Guid("dddddddd-dddd-aaaa-dddd-dddddddddddd"),
                            ElectionPositionId = new Guid("99999999-9999-9999-9999-999999999999"),
                            Timestamp = new DateTime(2027, 8, 9, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("11111111-0000-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("ElectionPosition", b =>
                {
                    b.HasOne("OnlineVotingSystem.api.Entities.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.api.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Election");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Candidate", b =>
                {
                    b.HasOne("ElectionPosition", "ElectionPosition")
                        .WithMany()
                        .HasForeignKey("ElectionPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.api.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElectionPosition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Election", b =>
                {
                    b.HasOne("OnlineVotingSystem.api.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineVotingSystem.api.Entities.Vote", b =>
                {
                    b.HasOne("OnlineVotingSystem.api.Entities.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectionPosition", "ElectionPosition")
                        .WithMany()
                        .HasForeignKey("ElectionPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineVotingSystem.api.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("ElectionPosition");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
